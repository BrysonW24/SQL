/*Background:

We are building a new debit card product and portal for card management (the project is tentatively called Virtual Cards). 
We are working with Architecture to determine the appropriate asset to build the portal on - CommBiz or NetBank. 
We have already obtained data on Not-For-Profits who will likely use this product (and be able to pay for it) and they are all CommBiz users. 
We are looking to understand whether business customers in our target market use CommBiz or NetBank. 

Request:
Customers who have 3+ BTAs, SCAs and/or CABIs with a balance across each of > $10,000 - 
which platform are they using - CommBiz or NetBank? 
Do they use CommBank App or CommBiz App?*/

--===================================================================================================

--PSEUDO-CODE
/*Customers who have 3+ BTAs, SCAs and/or CABIs with a balance across each of > $10,000 - 
which platform are they using - CommBiz or NetBank? 
Do they use CommBank App or CommBiz App?*/

--========

--ONE WE HAVE THE BASE -- THEN ADD THE AO'S 

/*FILTER 10K
LEFT WITH ACCT_I WITH > 10k
LINK TO ACCOUNT HOLDER
PATY_I - REL_CODE
LINK LOGINS DIGI ACTV
DEDUPE VIA REMOVE PATY AND REL CODE  AND CASE WHEN CUSTOMER HAS AO AND DIGI ACTV = Y
AT LEAST 1 AO TO THE ACCOUNT 
 
 FINAL VIEW
ACCT_I  -----  DIGITAL FLAG   -------   PATY_I  ---------  COMMBIZ */   

--===============================================
/*-- SANDPIT

SELECT * FROM XX WHERE PATY_I IN (SELECT PATY_I FROM VT_3ACC_BAL)

--CREATING A PERM TABLE IN SANDPIT
CREATE MULTISET TABLE U_D_DSV_001_PGR_1.XX AS 
(

)
WITH DATA
PRIMARY INDEX ();

-- E.G. U_D_DSV_001_PGR_1.VL_CUST_BASE_23*/
--===============================================

--======================================================================================================

--===============
--============================
--===================================
-- SECTION 1: Accounts and Balances
--===================================
--============================
--===============

-- >>( Checks
SELECT TOP 10 * FROM	PVDATA.ACCT_PATY_HIST; -- ACCOUNT PARTY HISTORY
SELECT TOP 10 * FROM	PVDATA.ACCT_PDCT_HIST; -- ACCOUNT PRODUCT HISTORY
--Confluence: https://confluence.prod.cba/display/BPBMDA/1.+Product+Codes

--=====================================================
-- OPEN ACCOUNTS 
-- BTA, SCA, CABI'S
--This table is the base table for accounts that meet the product codes that align to:
	-- Business Transaction Accounts
	-- Sca
	-- Cabi
--The aim is to select only active accounts between the current date joining the account relationship code and account number
--=====================================================

--DROP TABLE VT_OPEN_ACCOUNTS_ACC
CREATE MULTISET VOLATILE TABLE VT_OPEN_ACCOUNTS_ACC AS 
(
SELECT T1.ACCT_I 
				,T1.EFFT_D
				,T1.EXPY_D
				,T1.PDCT_N 
				,T2.BALN_A
				,T3.PATY_I
FROM PVDATA.ACCT_PDCT_HIST T1

LEFT JOIN ACCT_BALN_CURR T2  --Using the CURR tablke will always give you the latest spot balance for each account (1 unique record per account only)
	ON T1.ACCT_I = T2.ACCT_I

LEFT JOIN ACCT_PATY_HIST T3 
	ON T1.ACCT_I = T3.ACCT_I
	AND CURRENT_DATE BETWEEN T2.EFFT_D AND T2.EXPY_D	--Make sure you're only bringing back the latest customer relatioonships
	AND PATY_ACCT_REL_C IN ('BCA010','ZBCA10')

WHERE PDCT_N IN ('695','244','69')  -- FILTER PRODUCT CODE
	AND CURRENT_DATE BETWEEN EFFT_D AND EXPY_D
	--AND PATY_ACCT_REL_C IN ('BCA010','ZBCA10') --ACCOUNT HOLDER (CUSTOMER BASE)
														--'ZAUOP0' ,'ZAUOP1','ZAUOP4' ,'ZAUOP6') -- AUTHORISED OPERATOR
)
WITH DATA ON COMMIT PRESERVE ROWS;

--===

-- >>( Checks
SELECT * FROM VT_OPEN_ACCOUNTS_ACC
SELECT COUNT(*) FROM VT_OPEN_ACCOUNTS_ACC -- 1,331,006

/***************************************************************
--A) UNIQUE RECORDS
SELECT COUNT(*), COUNT(DISTINCT ACCT_I) FROM VT_OPEN_ACCOUNTS_ACC 	1,327,849	1,327,849

--B) UNIQUE ACCOUNTS PER PRODUCT
SELECT PDCT_N ,COUNT(*) FROM VT_OPEN_ACCOUNTS_ACC GROUP BY 1 

	PDCT_N	COUNT(*)
1	695			1,196,434
2	244			68,104
3	69			63,311

--C) CHECK SAMPLE RECORDS
SELECT * FROM PVDATA.ACCT_PATY_HIST
WHERE ACCT_I IN ('SAPSPAU06269241649080','SAPSPAU06220510501459','SAPSPAU06258210176133','SAPSPAU06269270659552'
								,'SAPSPAU06257610206130','SAPSPAU06216910469206','SAPSPAU06472410518342','SAPSPAU06317510465217')

***************************************************************/

--2) VT_OWNER TABLE contains mutiple records per customer (i.e. one customer for more than 1 account)
	--We want to convert the VT_OWNER Table to 1 unique record - to do this we need to group by common attributes that don't have multiple values per customer and then sum the balance
	--You dont want to include ACCT_I, PDCT_N because a customer might have multiple values and including in Group BY will still cause multiple records
	--THis table will now give you a unique list of organisation customers who own at least 1 BTA,SCA and/or CABI and the total balances of all accounts they own

--HELP TABLE PVDATA.PATY
--SELECT * FROM PVDATA.PATY

--DROP TABLE VT_PATY;
CREATE VOLATILE TABLE VT_PATY
AS
(
SELECT T1.PATY_I
				,T2.PATY_TYPE_C
				,COUNT(T1.ACCT_I) AS ACCT_N	--You can inlcude this if you want a count of all accounts each customer is linked to as well
				,SUM(T1.BALN_A) AS BALN_A	--Summing up the total balances across all accounts the customer is an owner of
FROM VT_ACC_BAL_HOLDER T1

INNER JOIN PVDATA.PATY T2
	ON T1.PATY_I = T2.PATY_I
	
GROUP BY 1,2
HAVING ACCT_N >= 3 AND BALN_A <= '-10000'
) WITH DATA ON COMMIT PRESERVE ROWS;

--===

-- >>( Checks
SELECT * FROM VT_PATY 
SELECT COUNT(*) FROM VT_PATY -- 1,220,532

/***************************************************************

--A) UNQIUE RECORDS (This is your new validation point for Unique Customers owning accounts)
--1,217,659
SELECT COUNT(*) FROM VT_PATY

--B) UNQIUE CUSTOMERS (This is your new validation point for Unique Customers owning accounts)
--1,217,659
SELECT COUNT(DISTINCT(PATY_I)) FROM VT_PATY

--C) CHECK YOUR SAMPLE FROM PART 3 ADDED CORRECTLY

SELECT * FROM VT_ACC_BAL_HOLDER
WHERE PATY_I='CIFPT+0014312693'

-- ACCT_I									EFFT_D			EXPY_D		PDCT_N	BALN_A	PATY_I
-- SAPSPAU06269243621102	9/02/2021	31/12/9999		695	-4.43	CIFPT+0014312693
-- SAPSPAU06309737863316	3/08/2020	31/12/9999		695	-62.87	CIFPT+0014312693
-- SAPSPAU06309737935930	6/08/2020	31/12/9999		695	-19.01	CIFPT+0014312693
-- SAPSPAU06445010569585	23/06/2020	31/12/9999	695	-6.39	CIFPT+0014312693

SELECT * FROM VT_PATY
WHERE PATY_I='CIFPT+0014312693'

PATY_I						ACCT_N		BALN_A
CIFPT+0014312693	4					-92.70

***************************************************************/

-- 3) Connecting segment and entity to customers 

--DROP TABLE VT_OWNER
CREATE SET VOLATILE TABLE VT_OWNER AS
(
        SELECT
                P1.PATY_I
                , COALESCE(IGD1.DEPT_I, IGD2.DEPT_I) AS DEPT_I
                , CASE WHEN DF1.DEPT_L2_NODE_C='NDEPT902731' THEN 'IB&M'
								WHEN DF1.DEPT_L2_NODE_C='NDEPT907836' THEN 'ES'
								WHEN DF1.DEPT_L4_NODE_C='NDEPT992185' THEN 'GCS'
								WHEN DF1.DEPT_L2_NODE_C='NDEPT902730' AND DF1.DEPT_L3_NODE_C='NDEPT902744' THEN 'SBB'	--Checked and still valid
								WHEN DF1.DEPT_L2_NODE_C='NDEPT902730' AND DF1.DEPT_L3_NODE_C='NDEPT909511' THEN 'RAB'	--Checked and still valid
								WHEN DF1.DEPT_L2_NODE_C='NDEPT902730' AND DF1.DEPT_L3_NODE_C='NDEPT990122' THEN 'CB'	--Updated from BCB to CB
								WHEN DF1.DEPT_L2_NODE_C='NDEPT902730' AND DF1.DEPT_L3_NODE_C='NDEPT994166' THEN 'MCG'	--Updated to bring in new Segment MCG
								WHEN DF1.DEPT_L2_NODE_C='NDEPT902730' AND DF1.DEPT_L3_NODE_C='NDEPT990750' THEN 'CommSec'	--Checked and still valid
								WHEN DF1.DEPT_L2_NODE_C='NDEPT993967' AND DF1.DEPT_L7_NODE_C IN ('NDEPT990728','NDEPT993464','NDEPT993752') THEN 'PRB'    -- School Banking is captured under MASS
								WHEN DF1.DEPT_L2_NODE_C='NDEPT993967' AND DF1.DEPT_L6_NODE_C IN ('NDEPT980011','NDEPT992959') THEN 'PRIVATE'
								WHEN DF1.DEPT_L3_NODE_C='NDEPT907299' AND DF1.DEPT_L4_NODE_C='NDEPT993185' THEN 'SB'  							
								WHEN (DF1.DEPT_L3_NODE_C='NDEPT907299' AND DF1.DEPT_L4_NODE_C='NDEPT907427' AND DF1.DEPT_L6_NODE_C<>'NDEPT992102') THEN 'RBS CSN'
								WHEN (DF1.DEPT_L3_NODE_C='NDEPT907299' AND DF1.DEPT_L4_NODE_C='NDEPT990918') THEN 'RBS DC'
								ELSE 'RBS Other'
								END AS SEGM_C -- business unit
                , DM1.DEPT_NODE_M AS OWN_M -- owner
 
		FROM PVDATA.PATY AS P1		-- Replace with Driving Customer Table
		
		--Link to an interest group that the customer is managed by (Each Business Portfolio Segment has a unique RLMT INT_GRUP_I)
        LEFT JOIN PVDATA.PATY_INT_GRUP_HIST AS PIG1	
                ON PIG1.PATY_I = P1.PATY_I
                AND PIG1.REL_C = 'RLMT'    -- Relationship Managed Interest Group
                AND CURRENT_DATE BETWEEN PIG1.EFFT_D AND PIG1.EXPY_D  					--Choose a specific date if you need to see the Interest Group a customer was part of at a point in time
                AND CURRENT_DATE BETWEEN PIG1.VALD_FROM_D AND PIG1.VALD_TO_D 	--Choose a specific date if you need to see the Interest Group a customer was part of at a point in time
        
		--Link to ensure the interest group is still effective
		LEFT JOIN PVDATA.INT_GRUP_HIST AS IG1  
                ON IG1.INT_GRUP_I = PIG1.INT_GRUP_I
                AND IG1.INT_GRUP_TYPE_C = 'RLMT'
                AND CURRENT_DATE BETWEEN IG1.EFFT_D AND IG1.EXPY_D
        
		--Link to the Department ID that owns the Interest Group (There are 2 scenarios where a department or an individual employee can own the a portfolio i.e SB vs RAB RM's)
		LEFT JOIN PVDATA.INT_GRUP_DEPT_HIST AS IGD1		
                ON IGD1.INT_GRUP_I = PIG1.INT_GRUP_I
                AND IGD1.DEPT_ROLE_C = 'OWNG' -- Owning
                AND CURRENT_DATE BETWEEN IGD1.EFFT_D AND IGD1.EXPY_D
                AND CURRENT_DATE BETWEEN IGD1.VALD_FROM_D AND IGD1.VALD_TO_D
       
	   --Link to the Department ID of the Staff member who owns the Interest Group (There are 2 scenarios where a department or an individual employee can own the a portfolio i.e SB vs RAB RM's)
		LEFT JOIN PVDATA.INT_GRUP_DEPT_HIST AS IGD2		
                ON IGD2.INT_GRUP_I = PIG1.INT_GRUP_I
                AND IGD2.DEPT_ROLE_C = 'STDP' -- Department id of the staff of that employee who owned that portfolio
                AND CURRENT_DATE BETWEEN IGD2.EFFT_D AND IGD2.EXPY_D
                AND CURRENT_DATE BETWEEN IGD2.VALD_FROM_D AND IGD2.VALD_TO_D
        
		--Link Department ID to GRD Hierarchy
		LEFT JOIN PVDATA.GRD_DEPT_FLAT_CURR AS DF1      
                ON DF1.DEPT_LEAF_NODE_C = COALESCE(IGD1.DEPT_I, IGD2.DEPT_I)
       
		LEFT JOIN PVDATA.GRD_DEPT_MEMB_CURR AS DM1
                ON DM1.DEPT_NODE_C = COALESCE(IGD1.DEPT_I, IGD2.DEPT_I)
        
		WHERE P1.SRCE_SYST_C='SAP'			--Enforce to ensure no duplicates from CIF source system
		QUALIFY RANK() OVER (PARTITION BY P1.PATY_I ORDER BY SEGM_C DESC) = 1 	--Selection preference to SBB	
) WITH DATA ON COMMIT PRESERVE ROWS;

--===

-- >>( Checks
SELECT * FROM VT_OWNER
SELECT SEGM_C, COUNT(DISTINCT PATY_I) FROM VT_OWNER GROUP BY 1;

/*	SEGM_C		COUNT(DISTINCT(PATY_I))
1	RBS Other	33,836,909
2	SBB				2,469,029
3	CB				246,077
4	PRB			117,939
5	RAB			114,228
6	IB&M			77,941
7	PRIVATE	74,558
8	MCG			34,292
9	RBS DC		19,455
10	GCS		5,946
11	ES			144	

Total 			37,017,011			*/

******************************************************************/

-- 4) Business Entity
--DROP TABLE BUSINESS_SEGMENTS_ENTITY
CREATE MULTISET VOLATILE TABLE BUSINESS_SEGMENTS_ENTITY 
AS 
(
SELECT T1.*
				,T2.DMGR_CATG_C		AS DEMO_CATEGORY
				,T3.DMGR_M					AS ENTITY_TYPE -- DEMOGRAPHIC NAME
--FROM ACCOUNT_BUSINESS_SEGMENT T1
FROM VT_OWNER T1

LEFT JOIN PVDATA.PATY_DMGR_HIST T2
	ON T1.PATY_I = T2.PATY_I

LEFT JOIN PVDATA.TYPE_DMGR_HIST T3
	ON T2.DMGR_CATG_C = T3.DMGR_CATG_C
	AND T2.DMGR_C  = T3.DMGR_C
	
WHERE 1=1
	--ENTITY_TYPE IN ('Domestic Proprietary Company' , 'Partnership', 'Sole Trader', 'Self-Managed Superannuation Fund', 'Trust') 
	--AND T2.DMGR_CATG_C = 'BSTC' -- THIS REMOVES FLAG ALL CUSTOMERS
	AND T2.DMGR_CATG_C = 'LSOO' 
    AND CURRENT_DATE BETWEEN T2.EFFT_D AND T2.EXPY_D
    AND CURRENT_DATE BETWEEN T3.EFFT_D AND T3.EXPY_D
)
WITH DATA
ON COMMIT PRESERVE ROWS;

--===

-- >>( Checks
SELECT * FROM BUSINESS_SEGMENTS_ENTITY
SELECT COUNT(DISTINCT PATY_I) FROM BUSINESS_SEGMENTS_ENTITY	 -- 2,294,765

SELECT COUNT(*) FROM BUSINESS_SEGMENTS_ENTITY WHERE SEGM_C IS NULL		-- 0

-- Checking customers are also present in full within the VT_OWNER table
SELECT COUNT(*) FROM BUSINESS_SEGMENTS_ENTITY WHERE PATY_I IN (SELECT PATY_I FROM VT_OWNER)		-- 2,295,011

-- Segment view for all customers 
SELECT DISTINCT SEGM_C
									, DEMO_CATEGORY
									, ENTITY_TYPE
									, COUNT(DISTINCT PATY_I)
FROM BUSINESS_SEGMENTS_ENTITY 
GROUP BY 1,2,3 
	ORDER BY 1,4 DESC

/*	SEGM_C	DEMO_CATEGORY	ENTITY_TYPE								Count(Distinct(PATY_I))
1	CB					LSOO				Domestic Proprietary Company			92,890
2	CB					LSOO				Self-Managed Superannuation Fund	5,734
3	CB					LSOO				Partnership											1,722
4	CB					LSOO				Sole Trader											1,283
5	ES					LSOO				Domestic Proprietary Company			26
6	ES					LSOO				Sole Trader											6
7	ES					LSOO				Partnership											3
8	GCS				LSOO				Domestic Proprietary Company			2,014
9	GCS				LSOO				Sole Trader											246
10	GCS			LSOO				Self-Managed Superannuation Fund	55
11	GCS			LSOO				Partnership											22
12	IB&M			LSOO				Domestic Proprietary Company			11,896
13	IB&M			LSOO				Partnership											558
14	IB&M			LSOO				Self-Managed Superannuation Fund	16
15	IB&M			LSOO				Sole Trader											4
16	MCG			LSOO				Domestic Proprietary Company			16,722
17	MCG			LSOO				Partnership											304
18	MCG			LSOO				Self-Managed Superannuation Fund	287
19	MCG			LSOO				Sole Trader											26
20	PRB			LSOO				Domestic Proprietary Company			11,827
21	PRB			LSOO				Self-Managed Superannuation Fund	2,890
22	PRB			LSOO				Sole Trader											754
23	PRB			LSOO				Partnership											84
24	PRIVATE	LSOO				Domestic Proprietary Company			22,341
25	PRIVATE	LSOO				Self-Managed Superannuation Fund	4,576
26	PRIVATE	LSOO				Sole Trader											607
27	PRIVATE	LSOO				Partnership											199
28	RAB			LSOO				Domestic Proprietary Company			37,847
29	RAB			LSOO				Self-Managed Superannuation Fund	3,563
30	RAB			LSOO				Partnership											2,952
31	RAB			LSOO				Sole Trader											1,009
32	RBS Other	LSOO				Domestic Proprietary Company			599,725
33	RBS Other	LSOO				Sole Trader											281,481
34	RBS Other	LSOO				Self-Managed Superannuation Fund	206,442
35	RBS Other	LSOO				Partnership											26,184
36	SBB				LSOO				Domestic Proprietary Company			656,052
37	SBB				LSOO				Sole Trader											221,278
38	SBB				LSOO				Self-Managed Superannuation Fund	57,729
39	SBB				LSOO				Partnership											21,946
 
   Total 					 2,293,300				*/

******************************************************************/

-- 5) Connecting balance, segment and entity to customers 
--DROP TABLE VT_O_ACC_BALN_SEG_ENT
CREATE MULTISET VOLATILE TABLE VT_O_ACC_BALN_SEG_ENT AS
(
SELECT T1.*
				--,T3.SEGM_C AS BUS_SEGMENTS
				,T3.OWN_M
				,T3.DEMO_CATEGORY
				,T3.ENTITY_TYPE
FROM VT_3ACC_BAL T1

--LEFT JOIN VT_OWNER T2
--	ON T1.PATY_I = T2.PATY_I

LEFT JOIN BUSINESS_SEGMENTS_ENTITY T3
	ON T1.PATY_I = T3.PATY_I
)
WITH DATA ON COMMIT PRESERVE ROWS;

--===

-- >>( Checks
SELECT * FROM VT_O_ACC_BALN_SEG_ENT
SELECT COUNT(DISTINCT PATY_I) FROM VT_O_ACC_BALN_SEG_ENT -- 13,447

/*	PATY_I				ACCT_N		BALN_A			BUS_SEGMENTS	OWN_M	DEMO_CATEGORY	ENTITY_TYPE
1	CIFPT+0649638960	3		-618,104.15			?	?	?	?
2	CIFPT+0015662830	3		-12,943.76			SBB	Brisbane CBD	LSOO	Domestic Proprietary Company
3	CIFPT+0795892868	3		-128,515.99			?	?	?	?
4	CIFPT+0005842044	9		-14,195,197.99	IB&M	IB Property HO 2350	LSOO	Partnership
5	CIFPT+0006548548	4		-985,584.40			MCG	Major Client Group VIC 2	LSOO	Domestic Proprietary Company
6	CIFPT+0150839692	4		-2,934,922.81		?	?	?	?
7	CIFPT+0005725708	3		-74,859.61			MCG	Major Client Group QLD	LSOO	Domestic Proprietary Company
8	CIFPT+0004815149	3		-1,062,361.00		MCG	West Coast Corporate	LSOO	Domestic Proprietary Company
9	CIFPT+0003381511	8		-2,304,421.07		?	?	?	?
10 CIFPT+0092385340	8		-123,584.88			?	?	?	?
*/

--===============
--============================
--===================================
-- SECTION 2: People and Organisations
--===================================
--============================
--===============

--// EXPLORE DATA
SELECT TOP 10 * FROM PVDATA.PATY

--	Full cohort of customers within the PATY table
SELECT PATY_TYPE_C
				,COUNT(*)
 FROM PVDATA.PATY
 GROUP BY PATY_TYPE_C
 
--P	40,596,837
--O	6,127,784

--	Customers exist in PATY core table
SELECT COUNT(*) FROM VT_O_ACC_BALN_SEG_ENT WHERE PATY_I IN (SELECT PATY_I FROM PVDATA.PATY) -- 13,447
SELECT COUNT(*) FROM PVDATA.PATY WHERE PATY_I IN (SELECT PATY_I FROM VT_O_ACC_BALN_SEG_ENT) -- 13,447

SELECT PATY_TYPE_C, COUNT(DISTINCT PATY_I) FROM PVDATA.PATY WHERE PATY_I IN (SELECT PATY_I FROM VT_O_ACC_BALN_SEG_ENT) GROUP BY 1;

/*	PATY_TYPE_C	Count(Distinct(PATY_I))
1	P							94
2	O							13,320    */

******************************************************************/

-- 7) Organisations
--DROP TABLE ORGS
CREATE MULTISET VOLATILE TABLE ORGS AS
(
SELECT DISTINCT T1.PATY_I
				,T1.PATY_TYPE_C
/*				,T1.SRCE_SYST_C
				,T1.SAP_BUSN_PTNR_I
				,T1.SRCE_SYST_PATY_I
				,T1.EFFT_D
				,T2.INT_GRUP_I
				,T2.INT_GRUP_SEGM_C*/
				,T2.ACCT_I 
				,T2.PATY_ACCT_REL_C
 FROM PVDATA.PATY T1
 
 LEFT JOIN PVDATA.ACCT_PATY_HIST T2
	ON T1.PATY_I = T2.PATY_I
 
-- LEFT JOIN U_D_DSV_001_PGR_1.BUSN_PATY_DIGI_ACTV T2
-- 	ON T1.PATY_I = T2.PATY_I
	
 WHERE T1.PATY_TYPE_C = 'O'
 	AND (T2.EXPY_D IS NULL OR T2.EXPY_D >= CURRENT_DATE)   -- EXPIRY DATE HAS TO BE AFTER OR EQUAL TO 
	AND T2.EFFT_D <= CURRENT_DATE -- EFFECTIVE (OPEN) DATE OF ACCT HAS TO BE OPEN BEFORE OR TODAY
)
WITH DATA ON COMMIT PRESERVE ROWS;

--===

-->>( Checks
SELECT * FROM ORGS
SELECT COUNT(*) FROM ORGS  -- 6,169,580

--SELECT * FROM VT_O_ACC_BALN_SEG_ENT WHERE PATY_I IN (SELECT PATY_I FROM ORGS)				-- 13,355
--SELECT * FROM VT_O_ACC_BALN_SEG_ENT WHERE PATY_I NOT IN (SELECT PATY_I FROM ORGS)  -- 92

******************************************************************/

--(8 People
DROP TABLE PEOPLE 
CREATE MULTISET VOLATILE TABLE PEOPLE AS
(
SELECT DISTINCT T1.PATY_I
				,T1.PATY_TYPE_C
/*				,T1.SRCE_SYST_C
				,T1.SAP_BUSN_PTNR_I
				,T1.SRCE_SYST_PATY_I
				,T1.EFFT_D
				,T2.INT_GRUP_I
				,T2.INT_GRUP_SEGM_C*/
				,T2.ACCT_I
				,T2.PATY_ACCT_REL_C
 FROM PVDATA.PATY T1
 
-- LEFT JOIN U_D_DSV_001_PGR_1.BUSN_PATY_DIGI_ACTV T2
-- 	ON T1.PATY_I = T2.PATY_I

LEFT JOIN PVDATA.ACCT_PATY_HIST T2
	ON T1.PATY_I = T2.PATY_I
	
 WHERE T1.PATY_TYPE_C = 'P'
 	AND (T2.EXPY_D IS NULL OR T2.EXPY_D >= CURRENT_DATE)   -- EXPIRY DATE HAS TO BE AFTER OR EQUAL TO 
	AND T2.EFFT_D <= CURRENT_DATE -- EFFECTIVE (OPEN) DATE OF ACCT HAS TO BE OPEN BEFORE OR TODAY
)
WITH DATA ON COMMIT PRESERVE ROWS;

--===

-->>( Checks
SELECT * FROM PEOPLE
SELECT COUNT(*) FROM PEOPLE -- 40,795,537

--SELECT * FROM VT_O_ACC_BALN_SEG_ENT WHERE PATY_I IN (SELECT PATY_I FROM PEOPLE)				-- 92
--SELECT * FROM VT_O_ACC_BALN_SEG_ENT WHERE PATY_I NOT IN (SELECT PATY_I FROM PEOPLE)  -- 13,355

******************************************************************/

--(9 Organisaitions x People x Accounts 
--DROP TABLE O_P_ACC 
CREATE MULTISET VOLATILE TABLE O_P_ACC AS
(
SELECT T1.PATY_I AS O_PATY_I
				,T1.ACCT_I AS O_ACCT_I
				,T1.PATY_ACCT_REL_C AS O_REL_C
				,T2.PATY_I AS P_PATY_I
				,T2.ACCT_I AS P_ACCT_I
				,T2.PATY_ACCT_REL_C AS P_REL_C
				,T3.DIGT_ONLY_F
				,T3.ACTV_DIGT_CUST_F
				,T3.NTB_REGR_F
				,T3.ACTV_NTB_CUST_F
				,T3.ACTV_MOBL_APP_CUST_F 
				,T3.DIGT_CHNL_LOGN_Q
				,T3.NTB_LOGN_Q
				,T3.CAPP_MOBL_LOGN_Q
FROM ORG_ACC T1

LEFT JOIN PEOPLE_ACC T2
	ON T1.ACCT_I = T2.ACCT_I
	
LEFT JOIN B_V_USR_STD_1.BV_RBS_DIGT_PATY_ACTV T3
	ON T1.P_PATY_I = T3.PATY_I
	AND T3.PERD_D = '2023-12-31'

WHERE T1.O_REL_C IN ('BCA010','ZBCA10') 
	AND T1.P_REL_C IN ('ZAUOP0' ,'ZAUOP1','ZAUOP4','ZAUOP5','ZAUOP6','ZTRUS0','ZCBZAU')
)
WITH DATA ON COMMIT PRESERVE ROWS;

SELECT * FROM O_P_ACC
SELECT COUNT(DISTINCT O_PATY_I) FROM O_P_ACC  -- 1,381,386

--===

-->>( Checks
SELECT * FROM VT_3ACC_BAL 
SELECT COUNT(*) FROM VT_3ACC_BAL --13,414

SELECT * FROM VT_O_ACC_BALN_SEG_ENT WHERE PATY_I IN (SELECT O_PATY_I FROM O_P_ACC)		-- 13,334
SELECT * FROM VT_O_ACC_BALN_SEG_ENT WHERE PATY_I NOT IN (SELECT O_PATY_I FROM O_P_ACC)		--  152

SELECT * FROM VT_O_ACC_BALN_SEG_ENT WHERE PATY_I IN (SELECT P_PATY_I FROM O_P_ACC) 		 -- 48
SELECT * FROM VT_O_ACC_BALN_SEG_ENT WHERE PATY_I NOT IN (SELECT P_PATY_I FROM O_P_ACC) 	-- 13,399

******************************************************************/

--(10 Organisaitions x People x Accounts x Digital
--DROP TABLE VT_O_P_DIGI
CREATE MULTISET VOLATILE TABLE VT_O_P_DIGI AS
(
SELECT *
FROM O_P_ACC_DIG
WHERE O_PATY_I IN (SELECT PATY_I FROM VT_3ACC_BAL) 
)
WITH DATA ON COMMIT PRESERVE ROWS;

--===

-->>( Checks
SELECT * FROM VT_O_P_DIGI ORDER BY O_PATY_I
SELECT COUNT(DISTINCT O_PATY_I) FROM VT_O_P_DIGI 	-- 13,334

/*	O_PATY_I					O_ACCT_I								O_REL_C	P_PATY_I				P_ACCT_I								P_REL_C	NTB_REGR_F	ACTV_NTB_CUST_F	ACTV_MOBL_APP_CUST_F	NTB_logn_q	CAPP_MOBL_LOGN_Q
1	CIFPT+0000000891	SAPSPAU06309736557077	BCA010	CIFPT+0030893071	SAPSPAU06309736557077	ZAUOP6	1	1	1	14	184
2	CIFPT+0000000891	SAPSPAU06269241044794	BCA010	CIFPT+0030893071	SAPSPAU06269241044794	ZAUOP6	1	1	1	14	184
3	CIFPT+0000000891	SAPSPAU06448310686197	BCA010	CIFPT+0030893071	SAPSPAU06448310686197	ZAUOP1	1	1	1	14	184
4	CIFPT+0000000891	SAPSPAU06484410071876	BCA010	CIFPT+0030893071	SAPSPAU06484410071876	ZAUOP1	1	1	1	14	184
5	CIFPT+0000000891	SAPSPAU06484410064377	BCA010	CIFPT+0030893071	SAPSPAU06484410064377	ZAUOP1	1	1	1	14	184
6	CIFPT+0000000891	SAPSPAU06484410071884	BCA010	CIFPT+0030893071	SAPSPAU06484410071884	ZAUOP1	1	1	1	14	184
7	CIFPT+0000002968	SAPSPAU06325410553201	BCA010	CIFPT+0626351065	SAPSPAU06325410553201	ZAUOP1	1	1	1	143	27
8	CIFPT+0000002968	SAPSPAU06325410762089	BCA010	CIFPT+0626351065	SAPSPAU06325410762089	ZAUOP1	1	1	1	143	27
9	CIFPT+0000002968	SAPSPAU06325410553228	BCA010	CIFPT+0626351065	SAPSPAU06325410553228	ZAUOP1	1	1	1	143	27
10 CIFPT+0000002968	SAPSPAU06269270668977	BCA010	CIFPT+0626351065	SAPSPAU06269270668977	ZAUOP6	1	1	1	143	27
*/

SELECT * FROM VT_O_P_DIGI
	SELECT COUNT(DISTINCT PATY_I) FROM VT_O_P_DIGI --92,921
	
-- FROM -- 9) Connecting segment and entity to customers 
SELECT * FROM VT_O_ACC_BALN_SEG_ENT 
SELECT COUNT(*) FROM VT_O_ACC_BALN_SEG_ENT -- 13,486

/*	PATY_I				ACCT_N		BALN_A		BUS_SEGMENTS	DEPT_OWNER	DEMO_CATEGORY	ENTITY_TYPE
1	CIFPT+0649638960	3		-618,104.15			?	?	?	?
2	CIFPT+0015662830	3		-12,943.76			SBB	Brisbane CBD	LSOO	Domestic Proprietary Company
3	CIFPT+0795892868	3		-128,515.99			?	?	?	?
4	CIFPT+0005842044	9		-14,195,197.99	Other	IB Property HO 2350	LSOO	Partnership
5	CIFPT+0006548548	4		-985,584.40			MCG	Major Client GROUP VIC 2	LSOO	Domestic Proprietary Company
6	CIFPT+0150839692	4		-2,934,922.81		?	?	?	?
7	CIFPT+0005725708	3		-74,859.61			MCG	Major Client GROUP QLD	LSOO	Domestic Proprietary Company
8	CIFPT+0004815149	3		-1,062,361.00		MCG	West Coast Corporate	LSOO	Domestic Proprietary Company
9	CIFPT+0003381511	8		-2,304,421.07		?	?	?	?
10 CIFPT+0092385340	8		-123,584.88			?	?	?	?*/

******************************************************************/

--(12 Organisaitions x People x Accounts x Digital x NTB registered
-- (1 CUSTOMERS WHO ARE DIGITALLY ACTIVE
CREATE  MULTISET VOLATILE TABLE VT_O_DIGI AS 
(
SELECT * FROM VT_O_ACC_BALN_SEG_ENT WHERE PATY_I IN (SELECT O_PATY_I FROM VT_O_P_DIGI)
)
WITH DATA ON COMMIT PRESERVE ROWS;

--===

-->>( Checks
SELECT * FROM VT_O_DIGI
SELECT COUNT(*) FROM VT_O_DIGI 	--10,252

******************************************************************/
--(18 Organisaitions x People x Accounts x Digital x Not NTB registered

-- (2 CUSTOMERS WHO ARE NOT IN THE TABLE WITH DIGITAL LOGINS
CREATE  MULTISET VOLATILE TABLE VT_O_NADIGI AS 
(
SELECT * FROM VT_O_ACC_BALN_SEG_ENT WHERE PATY_I NOT IN (SELECT O_PATY_I FROM VT_O_P_DIGI)
)
WITH DATA ON COMMIT PRESERVE ROWS;

--===

-->>( Checks
SELECT * FROM VT_O_NADIGI
SELECT COUNT(*) FROM VT_O_NADIGI --3,195

/*SELECT * FROM  B_V_USR_STD_1.BV_RBS_DIGT_PATY_ACTV  WHERE PERD_D = '2023-12-31' AND PATY_I IN (SELECT PATY_I FROM VT_O_NADIGI) --3195
SELECT NTB_REGR_F, NTB_LOGN_Q, CAPP_MOBL_LOGN_Q FROM  B_V_USR_STD_1.BV_RBS_DIGT_PATY_ACTV  WHERE PERD_D = '2023-12-31' AND PATY_I IN (SELECT PATY_I FROM VT_O_NADIGI)
SELECT COUNT(*) FROM  B_V_USR_STD_1.BV_RBS_DIGT_PATY_ACTV  WHERE NTB_REGR_F = '0' AND PERD_D = '2023-12-31' AND PATY_I IN (SELECT PATY_I FROM VT_O_NADIGI)

******************************************************************/

SELECT COUNT(*), COUNT(O_PATY_I), COUNT(P_PATY_I) FROM VT_O_P_DIGI 
	--COUNT(*)		COUNT(O_PATY_I)	COUNT(P_PATY_I)
1	93,116				93,116							93,116

SELECT COUNT(*), COUNT(PATY_I), COUNT(DISTINCT PATY_I) FROM VT_O_ACC_BALN_SEG_ENT
	--COUNT(*)		COUNT(PATY_I)		COUNT(DISTINCT(PATY_I))
1	13,447				13,447						13,447

SELECT COUNT(*), COUNT(DISTINCT O_PATY_I), COUNT(DISTINCT P_PATY_I) FROM VT_O_P_DIGI 
	--COUNT(*)		COUNT(DISTINCT(O_PATY_I))		COUNT(DISTINCT(P_PATY_I))
1	93,116				10,197												25,444

******************************************************************/

/*		O_PATY_I	O_ACCT_I	O_REL_C	P_PATY_I	P_ACCT_I	P_REL_C	NTB_REGR_F	ACTV_NTB_CUST_F	ACTV_MOBL_APP_CUST_F	NTB_logn_q	CAPP_MOBL_LOGN_Q
1	CIFPT+0000000891	SAPSPAU06484410071876	BCA010	CIFPT+0030893071	SAPSPAU06484410071876	ZAUOP1	1	1	1	10	186
2	CIFPT+0000000891	SAPSPAU06309736557077	BCA010	CIFPT+0030893071	SAPSPAU06309736557077	ZAUOP6	1	1	1	10	186
3	CIFPT+0000000891	SAPSPAU06448310686197	BCA010	CIFPT+0030893071	SAPSPAU06448310686197	ZAUOP1	1	1	1	10	186
4	CIFPT+0000000891	SAPSPAU06269241044794	BCA010	CIFPT+0030893071	SAPSPAU06269241044794	ZAUOP6	1	1	1	10	186
5	CIFPT+0000000891	SAPSPAU06484410064377	BCA010	CIFPT+0030893071	SAPSPAU06484410064377	ZAUOP1	1	1	1	10	186
6	CIFPT+0000000891	SAPSPAU06484410071884	BCA010	CIFPT+0030893071	SAPSPAU06484410071884	ZAUOP1	1	1	1	10	186
7	CIFPT+0000002968	SAPSPAU06325410553201	BCA010	CIFPT+0626351065	SAPSPAU06325410553201	ZAUOP1	1	1	1	139	13
8	CIFPT+0000002968	SAPSPAU06325450351073	BCA010	CIFPT+0626351065	SAPSPAU06325450351073	ZAUOP1	1	1	1	139	13
9	CIFPT+0000002968	SAPSPAU06325450351073	BCA010	CIFPT+0788316924	SAPSPAU06325450351073	ZAUOP1	1	1	1	4	1
10	CIFPT+0000002968	SAPSPAU06309741005656	BCA010	CIFPT+0626351065	SAPSPAU06309741005656	ZAUOP6	1	1	1	139	13               */

******************************************************************/

/*
DROP TABLE VT_O_P_DIGI_LOGN
CREATE MULTISET VOLATILE TABLE VT_O_P_DIGI_LOGN AS
(
SELECT DISTINCT PATY_I
				,CASE WHEN NTB_LOGN > APP_LOGN THEN 'NTBActive'
							WHEN NTB_LOGN = APP_LOGN THEN 'EqualZero'
							WHEN NTB_LOGN > 0 AND APP_LOGN > 0 AND NTB_LOGN = APP_LOGN THEN 'Equal'
							WHEN NTB_LOGN < APP_LOGN THEN 'APPActive'
							ELSE 'NA'
							END AS DIGITAL_LOGN
				,COUNT(DISTINCT PATY_I) AS COUNT_PATY_I
FROM VT_DIGI_SUMMARY T1
GROUP BY 1,2
)
WITH DATA ON COMMIT PRESERVE ROWS;

SELECT * FROM VT_O_P_DIGI_LOGN
SELECT COUNT(*) FROM VT_O_P_DIGI_LOGN	--10,235

--===

SELECT DIGITAL_LOGN
				,COUNT(PATY_I)
FROM VT_O_P_DIGI_LOGN
GROUP BY 1;*/

/*	DIGITAL_LOGN		Count(PATY_I)
1	APPActive				7,071		70%
2	NTBActive				2,595		26%
3	EqualZero				486			5%

									10,152
*/

--============================================================================

--(EXAMPLE TABLE: Use this as an example for further syntax
DROP TABLE VT_SUMMARY
CREATE MULTISET VOLATILE TABLE VT_SUMMARY AS
(
       SELECT DISTINCT PR1.PATY_I
		            , PR1.RELD_PATY_I AS ORG_PATY_I
		            , PR1.REL_TYPE_C
		            , COALESCE(TR1.REL_M, TR1.REL_X) AS REL_M -- DEALS WITH NULL VALUES
		            , P1.PATY_TYPE_C AS PATY_TYPE
		            , P2.PATY_TYPE_C AS RELD_PATY_TYPE
		            , RD1.AGE
					, CASE
		                WHEN AGE BETWEEN 18 AND 25 THEN '18-25'
		                WHEN AGE BETWEEN 26 AND 30 THEN '26-30'
		                WHEN AGE BETWEEN 31 AND 40 THEN '31-40'
		                WHEN AGE BETWEEN 41 AND 50 THEN '41-50'
		                WHEN AGE > 50 THEN '51+'
		            END AS AGE_BAND
		            , CASE WHEN ACTV_DIGT_CUST_F > 0 THEN 1 ELSE 0 END AS DIGT_ACTV_F
					, CASE WHEN DIGT_CHNL_LOGN_Q > 0 THEN 1 ELSE 0 END AS DIGT_ACTV_LOGN_F
					, CASE WHEN DIGT_ONLY_F > 0 THEN 1 ELSE 0 END AS DIGT_ONLY
					, CASE WHEN NTB_REGR_F > 0 THEN 1 ELSE 0 END AS NTB_REGISTERED
				    , CASE WHEN NTB_LOGN_Q > 0 THEN 1 ELSE 0 END AS NTB_ACTV_LOGN
				    , CASE WHEN CAPP_MOBL_LOGN_Q > 0 THEN 1 ELSE 0 END AS APP_ACTV_LOGN
		            , BC1.SEGM_C
		            , OE1.DMGR_M AS ENTITY_TYPE
	        FROM PVDATA.PATY_REL_HIST AS PR1
        INNER JOIN PVDATA.TYPE_REL_HIST AS TR1 
            ON PR1.REL_TYPE_C = TR1.REL_C
            AND PR1.SRCE_SYST_C = 'SAP'
            AND REL_M IN ('Director', 'Proprietor')
            AND (SELECT PERD_END_D FROM VT_DATE_RNGE) BETWEEN PR1.EFFT_D AND PR1.EXPY_D
            AND (SELECT PERD_END_D FROM VT_DATE_RNGE) BETWEEN TR1.EFFT_D AND TR1.EXPY_D
		INNER JOIN PVDATA.PATY AS P1
            ON PR1.PATY_I = P1.PATY_I
        INNER JOIN PVDATA.PATY AS P2
            ON PR1.RELD_PATY_I = P2.PATY_I
        INNER JOIN B_V_USR_STD_1.BV_RBS_DIGT_PATY_ACTV AS RD1
            ON PR1.PATY_I = RD1.PATY_I
            --AND AGE IS NOT NULL
            AND RD1.PERD_D = '2023-12-31'	
        INNER JOIN VT_ORG_ENTITY AS OE1
            ON PR1.RELD_PATY_I = OE1.PATY_I
        INNER JOIN BB_CUSTOMER_BASE AS BC1 -- REPLACE WITH base TABLE
            ON BC1.PATY_I = PR1.PATY_I
    ) 
    WITH DATA
    PRIMARY INDEX (PATY_I)
    ON COMMIT PRESERVE ROWS;

--============================================================================


--===============
--============================
--===================================
-- SECTION 3: CommBiz Data
--===================================
--============================
--===============


--COMMBIZ SERVICES

--20) Retrieve Unique Active Service ID's
HELP TABLE U_D_DSV_001_PGR_1.CBZ_SERVICE_USER_ALL
SELECT TOP 10 * FROM U_D_DSV_001_PGR_1.CBZ_SERVICE_USER_ALL

--DROP TABLE VT_SERVICE
CREATE MULTISET VOLATILE TABLE VT_SERVICE AS
(
SELECT FACILITY_ID
				,SERVICE_STATUS
FROM U_D_DSV_001_PGR_1.CBZ_SERVICE_USER_ALL
WHERE SERVICE_STATUS = 'Active'
GROUP BY 1,2
)
WITH DATA 
PRIMARY INDEX (FACILITY_ID)
ON COMMIT PRESERVE ROWS;

--===

-->>( Checks
SELECT * FROM VT_SERVICE
SELECT COUNT(*) FROM VT_SERVICE -- 83,955

/*	facility_id		service_status
1	100366116	Active
2	100359405	Active
3	102330806	Active
4	102027080	Active
5	102425215	Active
6	102400397	Active
7	102385671	Active
8	102397955	Active
9	102383815	Active
10 102301245	Active	*/

--===

--21) Find the Primary Owner of Each Service 

HELP TABLE PVDATA.ACCT_GRUP_HIST
SELECT TOP 10 * FROM PVDATA.ACCT_GRUP_HIST

--DROP TABLE VT_CBZ_PRIM_PATY_I
CREATE MULTISET VOLATILE TABLE VT_CBZ_PRIM_PATY_I AS
(
SELECT BSE.GRUP_I
				,BSE.SRCE_SYST_GRUP_I -- FACILITY ID
				,BSE.ACCT_GRUP_STRT_D
				,BSE.ACCT_GRUP_END_D
				,BSE.PRIM_PATY_I  -- O_PATY_I
FROM PVDATA.ACCT_GRUP_HIST AS BSE
WHERE BSE.SRCE_SYST_C = 'CBZ'
		AND BSE.ACCT_GRUP_TYPE_C = 'RGR'
		AND CAST('2023-12-31' AS DATE) BETWEEN BSE.EFFT_D AND BSE.EXPY_D
		AND BSE.ACCT_GRUP_END_D IS NULL -- ENSURE THAT THE RELATIONSHIP IS STILL ACTIVE
)
WITH DATA
PRIMARY INDEX (PRIM_PATY_I)
ON COMMIT PRESERVE ROWS;

--===

-->>( Checks
SELECT * FROM VT_CBZ_PRIM_PATY_I
SELECT COUNT(*) FROM VT_CBZ_PRIM_PATY_I --85,076

/*	GRUP_I		SRCE_SYST_GRUP_I	ACCT_GRUP_STRT_D	ACCT_GRUP_END_D	PRIM_PATY_I
1	CBZA1100056370	100056370			5/04/2007							?				CIFPT+0435832199
2	CBZA1102387009	102387009			23/09/2022						?				CIFPT+0119156796
3	CBZA1101089128	101089128			21/11/2012						?				CIFPT+0000375705
4	CBZA1102162252	102162252			27/06/2017						?				CIFPT+0754068896
5	CBZA1100309224	100309224			21/04/2010						?				CIFPT+0824673425
6	CBZA1102036056	102036056			17/02/2015						?				CIFPT+0005644845
7	CBZA1101996117	101996117			17/10/2014						?				CIFPT+0783650472
8	CBZA1102253466	102253466			31/01/2018						?				CIFPT+0016125855
9	CBZA1102355383	102355383			15/06/2021						?				CIFPT+0013541311
10 CBZA1100247442	100247442			30/01/2009						?				CIFPT+0661206557  */

--=================

SELECT * FROM VT_CBZ_PRIM_PATY_I 
SELECT * FROM VT_O_P_DIGI 
SELECT * FROM VT_O_P_DIGI_LOGN

-- FROM --(VT_O_P_DIGI = 16 Organisaitions x People x Accounts x Digital
SELECT COUNT(*) FROM VT_CBZ_PRIM_PATY_I
	WHERE PRIM_PATY_I IN (SELECT O_PATY_I FROM VT_O_P_DIGI)  -- 3,230

SELECT COUNT(*) FROM VT_CBZ_PRIM_PATY_I
	WHERE PRIM_PATY_I IN (SELECT PATY_I FROM VT_O_P_DIGI_LOGN)  -- 3,217

/*SHOULD WE EVEN ANALYSE COMMBIZ AT ALL -
CHECK IF THE O'S HAS A SERVICE AT ALL PRIOR TO DOING ANALYSIS ON LOGINS*/

********
-- WITH ONLY 3,211 ORGANISATIONS WITH SERVICES FROM 
********

-->( Checks against Ventura's base table 
SELECT * FROM U_D_DSV_001_PGR_1.VL_CUST_BASE_23
WHERE PATY_I IN (SELECT PRIM_PATY_I FROM VT_CBZ_PRIM_PATY_I) 
--69,479

SELECT PATY_TYPE_C, COUNT(*) FROM U_D_DSV_001_PGR_1.VL_CUST_BASE_23
WHERE PATY_I IN (SELECT PRIM_PATY_I FROM VT_CBZ_PRIM_PATY_I) 
GROUP BY 1;

--===

--22) JOIN THE 2 VOLATILE TABLES ON SERVICE ID (FACILITY_ID=SRCE_SYST_GRUP_I)

SELECT * FROM VT_OWNER
SELECT COUNT(*) FROM VT_OWNER

--DROP TABLE VT_SERVICE_PRIM
CREATE MULTISET VOLATILE TABLE VT_SERVICE_PRIM AS
(
SELECT T1.*
				,T2.*
				,T3.SEGM_C
FROM VT_SERVICE T1
LEFT JOIN VT_CBZ_PRIM_PATY_I T2
	ON T1.FACILITY_ID = T2.SRCE_SYST_GRUP_I
LEFT JOIN VT_OWNER T3
	ON T2.PRIM_PATY_I = T3.PATY_I
)
WITH DATA ON COMMIT PRESERVE ROWS;

--===

-->>( Checks
SELECT * FROM VT_SERVICE_PRIM
SELECT COUNT(*) FROM VT_SERVICE_PRIM --83,636

/*	facility_id	service_status	GRUP_I	SRCE_SYST_GRUP_I	ACCT_GRUP_STRT_D	ACCT_GRUP_END_D	PRIM_PATY_I	SEGM_C
1	100366116	Active	CBZA1100366116	100,366,116.00	22/10/2010	?	CIFPT+0026678837	SBB
2	100359405	Active	CBZA1100359405	100,359,405.00	3/09/2010	?	CIFPT+0202679485	SBB
3	102330806	Active	CBZA1102330806	102,330,806.00	12/11/2019	?	CIFPT+0030697558	CB
4	102027080	Active	CBZA1102027080	102,027,080.00	25/03/2015	?	CIFPT+0000023153	SBB
5	102425215	Active	CBZA1102425215	102,425,215.00	3/11/2023	?	CIFPT+0002588624	CB
6	102400397	Active	CBZA1102400397	102,400,397.00	31/05/2023	?	CIFPT+0012091510	SBB
7	102385671	Active	CBZA1102385671	102,385,671.00	14/10/2022	?	CIFPT+0013377725	CB
8	102397955	Active	CBZA1102397955	102,397,955.00	3/05/2023	?	CIFPT+0164718708	SBB
9	102383815	Active	CBZA1102383815	102,383,815.00	28/09/2022	?	CIFPT+0016693159	SBB
10	102301245	Active	CBZA1102301245	102,301,245.00	7/09/2018	?	CIFPT+0163715624	SBB  */

SELECT COUNT(*) FROM VT_SERVICE_PRIM WHERE PRIM_PATY_I IS NULL --1,310
SELECT COUNT(*) FROM VT_SERVICE_PRIM WHERE BUS_SEGMENT IS NULL --1,312

--===

--(24 CommBiz Customers 

DROP TABLE VT_P_DIGI_SEG_CBZ
CREATE MULTISET VOLATILE TABLE VT_P_DIGI_SEG_CBZ AS
(
SELECT T1.*
				,T2.*
FROM VT_O_ACC_BALN_SEG_ENT T1

LEFT JOIN VT_SERVICE_PRIM T2
	ON T1.PATY_I = T2.PRIM_PATY_I
)
WITH DATA ON COMMIT PRESERVE ROWS;

--===

-->>( Checks
SELECT * FROM VT_P_DIGI_SEG_CBZ
SELECT COUNT(DISTINCT PATY_I) FROM VT_P_DIGI_SEG_CBZ    -- 13,442

/*	PATY_I	PATY_TYPE_C  ACCT_N	BALN_A		BUS_SEGMENTS	OWN_M	DEMO_CATEGORY	ENTITY_TYPE	facility_id	service_status	GRUP_I	SRCE_SYST_GRUP_I	ACCT_GRUP_STRT_D	ACCT_GRUP_END_D	PRIM_PATY_I	SEGM_C
1	CIFPT+0649638960	O		3		-657,472.77			?	?	?	?	100068071	Active	CBZA1100068071	100068071	30/05/2007	?	CIFPT+0649638960	RAB
2	CIFPT+0015662830	O		3		-18,064.21			SBB	Brisbane CBD	LSOO	Domestic Proprietary Company	?	?	?	?	?	?	?	?
3	CIFPT+0795892868	O		3		-128,388.27			?	?	?	?	?	?	?	?	?	?	?	?
4	CIFPT+0005842044	O		9		-12,048,575.53	IB&M	IB Property HO 2350	LSOO	Partnership	102032103	Active	CBZA1102032103	102032103	11/02/2015	?	CIFPT+0005842044	IB&M
5	CIFPT+0006548548	O		4		-891,480.04			MCG	Major Client Group VIC 2	LSOO	Domestic Proprietary Company	?	?	?	?	?	?	?	?
6	CIFPT+0150839692	O		4		-1,611,947.42		?	?	?	?	100038093	Active	CBZA1100038093	100038093	17/08/2007	?	CIFPT+0150839692	CB
7	CIFPT+0005725708	O		3		-74,859.61			MCG	Major Client Group QLD	LSOO	Domestic Proprietary Company	?	?	?	?	?	?	?	?
8	CIFPT+0004815149	O		3		-1,378,736.82		MCG	West Coast Corporate	LSOO	Domestic Proprietary Company	?	?	?	?	?	?	?	?
9	CIFPT+0003381511	O		8		-2,232,685.00		?	?	?	?	101953073	Active	CBZA1101953073	101953073	19/11/2013	?	CIFPT+0003381511	SBB*/

*****************************************************************

--(25 CommBiz Customers x Digital 

DROP TABLE VT_CBZ_DIGI
CREATE MULTISET VOLATILE TABLE VT_CBZ_DIGI AS
(
SELECT DISTINCT PATY_I
				,PATY_IDNN_HK    
				,NTB_REGR_F
				,DIGT_CUST_F
				,NTB_LOGN_Q
				,CAPP_MOBL_LOGN_Q 
FROM B_V_USR_STD_1.BV_RBS_DIGT_PATY_ACTV
WHERE PERD_D = '2023-12-31'
		--AND PATY_I IN (SELECT PRIM_PATY_I FROM VT_SERVICE_PRIM)
		AND PATY_I IN (SELECT PRIM_PATY_I FROM VT_P_DIGI_SEG_CBZ)
		--AND NTB_REGR_F <> '0'
)
WITH DATA ON COMMIT PRESERVE ROWS;

--===

-->>( Checks
SELECT * FROM VT_CBZ_DIGI
--SELECT COUNT(*) FROM VT_CBZ_DIGI 	-- 81,168			(VT_SERVICE_PRIM)
SELECT COUNT(*) FROM VT_CBZ_DIGI   -- 4,856 			(VT_P_DIGI_SEG_CBZ) w/o NTB_Reg
SELECT COUNT(*) FROM VT_CBZ_DIGI   -- 10 				(VT_P_DIGI_SEG_CBZ) w/ NTB_ Reg

/*	PATY_I						Paty_idnn_hk														NTB_REGR_F	DIGT_CUST_F	NTB_logn_q	CAPP_MOBL_LOGN_Q
1	CIFPT+0619179497	B4172E16F143BCD13B40ACA6B31D2337		1		1		0		0
2	CIFPT+0082043404	E3A9E60B25FCA4A44028BEC43341FBF9		1		1		4		27
3	CIFPT+0651303691	CBED06D31AAB9625E6FC24B64550ADE7		1		1		0		23
4	CIFPT+0904709386	E22263333B3B4C156FAB2FE78B05CD49		1		1		0		0
5	CIFPT+0715346834	C261B45B9FECAEB8D00BFBE31ADB5D60		1		0		0		0
6	CIFPT+0701386928	4DF351ACEE97782F87BE5F1ADC4AF612		1		1		0		21
7	CIFPT+0139143045	2CD695C1FDA646D11D1046B05C19996F		1		1		16	0
8	CIFPT+0001259241	8075570051096BA83B9E7B47146E5C87			1		1		1		27
9	CIFPT+0008152764	3E1C544493F6C402964733D6AEE69DAD		1		1		17	49  		*/

******************************************************************/

SELECT * FROM VT_O_DIGI

DROP TABLE VT_CBZ_REGR
CREATE MULTISET VOLATILE TABLE VT_CBZ_REGR AS
(
SELECT VT.PATY_I
		    -- Create a flaf that searches customers from digital summary table to customers in the CommBiz table
		    ,CASE WHEN OT.PATY_I IS NOT NULL THEN 1 ELSE 0 END AS CUSTOMER_EXISTS_FLAG
FROM VT_O_DIGI AS VT

LEFT JOIN VT_CBZ_DIGI AS OT 
		ON VT.PATY_I = OT.PATY_I 
GROUP BY VT.PATY_I, CUSTOMER_EXISTS_FLAG
)
WITH DATA ON COMMIT PRESERVE ROWS;

--===

-->>( Checks
SELECT * FROM VT_CBZ_REGR
SELECT COUNT(*) FROM VT_CBZ_REGR 	-- 13,334

/*	PATY_I						CUSTOMER_EXISTS_FLAG
1	CIFPT+0003097462	0
2	CIFPT+0015662830	0
3	CIFPT+0795892868	0
4	CIFPT+0721097936	0
5	CIFPT+0008877185	1
6	CIFPT+0016079039	0
7	CIFPT+0356801948	0
8	CIFPT+0003381511	1
9	CIFPT+0092385340	1    */

******************************************************************/

--(19 Digital logons per asset (CBA App and NetBank)

SELECT * FROM VT_O_DIGI
SELECT * FROM VT_O_P_DIGI

DROP TABLE VT_DIGI_SUMMARY
CREATE MULTISET VOLATILE TABLE VT_DIGI_SUMMARY AS
(
SELECT T1.*
				,T2.O_PATY_I
				, CASE WHEN ACTV_DIGT_CUST_F > 0 THEN 1 ELSE 0 END AS DIGT_ACTV_F
				, CASE WHEN DIGT_CHNL_LOGN_Q > 0 THEN 1 ELSE 0 END AS DIGT_ACTV_LOGN_F
				, CASE WHEN DIGT_ONLY_F > 0 THEN 1 ELSE 0 END AS DIGT_ONLY
				, CASE WHEN NTB_REGR_F > 0 THEN 1 ELSE 0 END AS NTB_REGISTERED
			    , CASE WHEN NTB_LOGN_Q > 0 THEN 1 ELSE 0 END AS NTB_ACTV_LOGN
			    , CASE WHEN CAPP_MOBL_LOGN_Q > 0 THEN 1 ELSE 0 END AS APP_ACTV_LOGN	
				, CASE WHEN CUSTOMER_EXISTS_FLAG > 0 THEN 1 ELSE 0 END AS CBZ_REGISTERED	
				,SUM(NTB_LOGN_Q) AS NTB_LOGN
				,SUM(CAPP_MOBL_LOGN_Q) AS APP_LOGN
FROM VT_O_DIGI T1
INNER JOIN VT_O_P_DIGI T2
	ON T1.PATY_I = T2.O_PATY_I
INNER JOIN VT_CBZ_REGR T3
	ON T1.PATY_I = T3.PATY_I
--WHERE NTB_REGR_F = '1'
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
--ORDER BY T1.PATY_I
)
WITH DATA ON COMMIT PRESERVE ROWS;

--===

-- ( Checks 
SELECT * FROM VT_DIGI_SUMMARY ORDER BY PATY_I
SELECT COUNT(*), COUNT(DISTINCT PATY_I), COUNT(DISTINCT O_PATY_I) FROM VT_DIGI_SUMMARY

--COUNT(*)			COUNT(DISTINCT(PATY_I))	COUNT(DISTINCT(O_PATY_I))
1	18,905			10,252										10,252

-- THE COUNT OF 18,905 IS DUE TO THE DIGITAL ACTIVITY FLAGS WITH DIFFERENT COMBINATIONS - THE NEXT STEP IS AGGREGATING THIS

/*	PATY_I					PATY_TYPE_C	ACCT_N	BALN_A	BUS_SEGMENTS	OWN_M	DEMO_CATEGORY	ENTITY_TYPE	O_PATY_I	DIGT_ACTV_F	DIGT_ACTV_LOGN_F	DIGT_ONLY	NTB_REGISTERED	NTB_ACTV_LOGN	APP_ACTV_LOGN	NTB_LOGN	APP_LOGN
1	CIFPT+0000000891	O						3				-37,318.46	SBB	Gold Coast and Regional QLD	LSOO	Domestic Proprietary Company	CIFPT+0000000891	1	1	1	1/01/1900	1	1	84	1,104
2	CIFPT+0000017179	O						3				-13,515.28	SBB	Inner Metro Sydney	LSOO	Domestic Proprietary Company	CIFPT+0000017179	1	1	1	1	0	1	0	192
3	CIFPT+0000017973	O						4				-469,968.71	CB	CB WA 1	LSOO	Domestic Proprietary Company	CIFPT+0000017973	1	1	1	1	1	0	90	0
4	CIFPT+0000023411	O						4				-13,360,632.38	?	?	?	?	CIFPT+0000023411	1	1	1	1/01/1900	0	1	0	51
5	CIFPT+0000029527	O						3				-17,664.34	?	?	?	?	CIFPT+0000029527	1	1	1	1	1	1	40	32
6	CIFPT+0000035365	O						3				-97,212.04	?	?	?	?	CIFPT+0000035365	1	1	1	1/01/1900	0	1	0	285
7	CIFPT+0000035365	O						3				-97,212.04	?	?	?	?	CIFPT+0000035365	0	0	0	1	0	0	0	0
8	CIFPT+0000035365	O						3				-97,212.04	?	?	?	?	CIFPT+0000035365	1	1	1	1	1	0	265	0
9	CIFPT+0000039245	O						55			-351,421.13	?	?	?	?	CIFPT+0000039245	1	1	1	1/01/1900	0	1	0	441		*/

******************************************************************/

--(20 Second round summary

DROP TABLE VT_DIGI_SUMMARY_2
CREATE MULTISET VOLATILE TABLE VT_DIGI_SUMMARY_2 AS
(
SELECT DISTINCT PATY_I
		    ,MAX(ACCT_N) AS ACCT_N 
		    ,MAX(BALN_A) AS BALN_A 
		    ,MAX(BUS_SEGMENTS) AS BUS_SEGMENTS
		    ,MAX(OWN_M) AS OWN_M  
		    ,MAX(DEMO_CATEGORY) AS DEMO_CATEGORY  
		    ,MAX(ENTITY_TYPE) AS ENTITY_TYPE  
			-- Aggregation Flags
		    ,MAX(CASE WHEN DIGT_ACTV_F = 1 THEN 1 ELSE 0 END) AS DIGT_ACTV_F 
			,MAX(CASE WHEN NTB_REGISTERED = 1 THEN 1 ELSE 0 END) AS NTB_REGISTERED 
			,MAX(CASE WHEN DIGT_ONLY = 1 THEN 1 ELSE 0 END) AS DIGT_ONLY 
			,MAX(CASE WHEN CBZ_REGISTERED = 1 THEN 1 ELSE 0 END) AS CBZ_REGISTERED 
			-- Calculate a flag to decipher which channel has higher logins
			,CASE 
				WHEN SUM(NTB_LOGN) > SUM(APP_LOGN) THEN 'Netbank_Higher'
				WHEN SUM(NTB_LOGN) < SUM(APP_LOGN) THEN 'App_Higher'
				WHEN SUM(NTB_LOGN) = 0 AND SUM(APP_LOGN) = 0 AND SUM(NTB_LOGN) = SUM(APP_LOGN)  THEN 'Equal_Zero'
				WHEN SUM(NTB_LOGN) > 0 AND SUM(APP_LOGN) > 0 AND SUM(NTB_LOGN) = SUM(APP_LOGN) THEN 'Equal'
				ELSE 'NA'
			END AS DIGITAL_LOGIN_USAGE
FROM VT_DIGI_SUMMARY
GROUP BY PATY_I
)
WITH DATA ON COMMIT PRESERVE ROWS;

--===

-->>( Checks
SELECT * FROM VT_DIGI_SUMMARY_2
SELECT COUNT(*) FROM VT_DIGI_SUMMARY_2	--13,334
SELECT 

	/*	PATY_I				ACCT_N		BALN_A		BUS_SEGMENTS	OWN_M	DEMO_CATEGORY	ENTITY_TYPE	DIGT_ACTV_F	NTB_REGISTERED	DIGT_ONLY	CBZ_REGISTERED	DIGITAL_LOGIN_USAGE
1	CIFPT+0003097462	3			-331,492.34		RAB	RAB NSW Hunter & Central Coast	LSOO	Domestic Proprietary Company		1	1	1	0	Netbank_Higher
2	CIFPT+0015662830	3			-18,064.21		SBB	Brisbane CBD	LSOO	Domestic Proprietary Company										1	1	1	0	App_Higher
3	CIFPT+0795892868	3			-128,388.27		?	?	?	?																														1	1	1	0	Netbank_Higher
4	CIFPT+0721097936	7			-345,443.39		?	?	?	?																														1	1	1	0	App_Higher
5	CIFPT+0008877185	4			-386,783.09		CB	CB VIC 30 North West 2	LSOO	Domestic Proprietary Company						1	1	0	1	App_Higher
6	CIFPT+0016079039	3			-28,212.43		SBB	Inner Metro Sydney	LSOO	Domestic Proprietary Company								1	1	1	0	App_Higher
7	CIFPT+0356801948	3			-110,982.89		CB	CB NSW 30 Greater Western Syd	LSOO	Domestic Proprietary Company		1	1	1	0	App_Higher
8	CIFPT+0003381511	8			-2,232,685.00	?	?	?	?																														1	1	1	1	App_Higher
9	CIFPT+0092385340	8			-84,457.84		?	?	?	?																														1	1	1	1	App_Higher		*/

SELECT BUS_SEGMENTS, COUNT(PATY_I) FROM VT_DIGI_SUMMARY_2 GROUP BY 1;

******************************************************************/

DROP TABLE VT_DIGI_SUMMARY_3
CREATE MULTISET VOLATILE TABLE VT_DIGI_SUMMARY_3 AS
(
SELECT DISTINCT PATY_I 
				,CASE 
					WHEN NTB_REGISTERED = 1 AND CBZ_REGISTERED = 0 THEN 'Netbank_Registered_Only'
					WHEN NTB_REGISTERED = 1 AND CBZ_REGISTERED = 1 THEN 'Netbank_and_Commbiz_Registered'
					WHEN NTB_REGISTERED = 0 AND CBZ_REGISTERED = 1 THEN 'CommBiz_Registered_Only'
					ELSE 'NA'
				END AS REGISTERED_CHANNELS
				,DIGITAL_LOGIN_USAGE
FROM VT_DIGI_SUMMARY_2
)
WITH DATA ON COMMIT PRESERVE ROWS;

--===

-->>( Checks
SELECT * FROM VT_DIGI_SUMMARY_3
SELECT COUNT(*) FROM VT_DIGI_SUMMARY_3 	-- 13,334

SELECT REGISTERED_CHANNELS
				, COUNT(PATY_I) 
				, (COUNT(*) *100.0 / (SELECT COUNT(*) FROM VT_DIGI_SUMMARY_2)) AS PROPORTION_PERC
FROM VT_DIGI_SUMMARY_3 GROUP BY 1;

SELECT DIGITAL_LOGIN_USAGE
				, COUNT(PATY_I) 
				, (COUNT(*) *100.0 / (SELECT COUNT(*) FROM VT_DIGI_SUMMARY_2)) AS PROPORTION_PERC
FROM VT_DIGI_SUMMARY_3 GROUP BY 1;

--(  Checks
/*	PATY_I						REGISTERED_CHANNELS					DIGITAL_LOGIN_USAGE
1	CIFPT+0003097462	Netbank_Registered_Only					Netbank_Higher
2	CIFPT+0015662830	Netbank_Registered_Only					App_Higher
3	CIFPT+0795892868	Netbank_Registered_Only					Netbank_Higher
4	CIFPT+0721097936	Netbank_Registered_Only					App_Higher
5	CIFPT+0008877185	Netbank_and_Commbiz_Registered	App_Higher
6	CIFPT+0016079039	Netbank_Registered_Only					App_Higher
7	CIFPT+0356801948	Netbank_Registered_Only					App_Higher
8	CIFPT+0003381511	Netbank_and_Commbiz_Registered	App_Higher
9	CIFPT+0092385340	Netbank_and_Commbiz_Registered	App_Higher	*/


/*		REGISTERED_CHANNELS				Count(PATY_I)	PROPORTION_PERC
1	Netbank_Registered_Only						8,468					63.5
2	Netbank_and_Commbiz_Registered		4,826					36.2
3	CommBiz_Registered_Only						30						0.2
4	NA															10						0.1
  	*/


/*		DIGITAL_LOGIN_USAGE	Count(PATY_I)	PROPORTION_PERC
1	App_Higher								10,117					75.9
2	Netbank_Higher						2,842					21.3
3	Equal_Zero								334						2.5
4	Equal										41						0.3
		*/

******************************************************************/

-- GROUPING CUSTOMERS BY THE O AND P PATY_I TO GET THE TABLE DOWN TO TWO ROWS

-- DOING THE FUNCTION AGAIN FOR A SINGLE ROW 

--CUSTOMER SPLIT FOR THE FINAL VIEW
-- NETBANK / NETBANK + COMMBIZ / COMMBIZ ONLY 
-- BUILDING IN APP OR NETBANK - USING THE LOGIN? ACTIVE STATUS? LOGINS WILL SERVE THE PURPOSE  

-- COMMBIZ REGISTRATION FLAG 

******************************************************************/





--===========================================
--COMMBIZ SERVICE USERS

--26) CommBiz Service Users and Digital Activity

 --1) Retreve Unique Active Service Users and their corresponding CIF
 DROP TABLE VT_SERVICE_USER
CREATE MULTISET VOLATILE TABLE VT_SERVICE_USER AS
 (
 SELECT FACILITY_ID
 				,SERVICE_STATUS
				,FACILITY_USER_ID
				,CIF
				,CHARACTER_LENGTH(CIF) AS CIF_CHAR
				,CASE WHEN CHARACTER_LENGTH(CIF) =10 THEN 'CIFPT+' || cif
				WHEN CHARACTER_LENGTH(CIF) =9 THEN 'CIFPT+0' || cif
				WHEN CHARACTER_LENGTH(CIF) =8 THEN 'CIFPT+00' || cif
				WHEN CHARACTER_LENGTH(CIF) =7 THEN 'CIFPT+000' || cif
				WHEN CHARACTER_LENGTH(CIF) =6 THEN 'CIFPT+0000' || cif
				WHEN CHARACTER_LENGTH(CIF) =5 THEN 'CIFPT+00000' || cif
				WHEN CHARACTER_LENGTH(CIF) =4 THEN 'CIFPT+000000' || cif
				WHEN CHARACTER_LENGTH(CIF) =3 THEN 'CIFPT+0000000' || cif
				WHEN CHARACTER_LENGTH(CIF) =2 THEN 'CIFPT+00000000' || cif
				WHEN CHARACTER_LENGTH(CIF) =1 THEN 'CIFPT+000000000' || cif
				END AS PATY_I
FROM U_D_DSV_001_PGR_1.CBZ_SERVICE_USER_ALL
WHERE SERVICE_STATUS = 'Active'
		AND USER_STATUS = 'Active'
 )
 WITH DATA
 PRIMARY INDEX (PATY_I)
 ON COMMIT PRESERVE ROWS;
 
--===

-->>( Checks
 SELECT * FROM VT_SERVICE_USER
SELECT COUNT(*) FROM VT_SERVICE_USER --348,490
 
 -- || REPRESENTS STRING CONCATENATION
 
 --27 JOIN ON MOBILE ACTIVITY BASED ON PATY_I VALUE
 
  HELP TABLE B_V_USR_STD_1.BV_RBS_DIGT_PATY_ACTV; 
  
 SELECT COUNT(PATY_I) FROM VT_SERVICE_USER --183,687
 SELECT COUNT(DISTINCT PATY_I) FROM VT_SERVICE_USER --168,447
 
 SELECT * FROM VT_SERVICE_USER WHERE PATY_I IN 
 	(SELECT DISTINCT PATY_I FROM B_V_USR_STD_1.BV_RBS_DIGT_PATY_ACTV WHERE PERD_D = '2023-12-31') 
	
SELECT MAX(PERD_D) FROM B_V_USR_STD_1.BV_RBS_DIGT_PATY_ACTV -- 31/10/2023
 
 --=====================================================
-- DIGITAL ACTIVITY: Create a table to hold the PATY_I and the count of products 
--=====================================================

--(27 CommBiz Customers x Digital 

HELP TABLE U_D_DSV_001_PGR_1.BUSN_PATY_DIGI_ACTV; 			  -- BUSINESS DIGITAL ACTIVITY
HELP TABLE B_V_USR_STD_1.BV_RBS_DIGT_PATY_ACTV; 

DROP TABLE VT_DIGITAL_ACTV
CREATE MULTISET VOLATILE TABLE VT_DIGITAL_ACTV AS 
(
SELECT T1.*
				,T2.NTB_REGR_F
				,T2.ACTV_DIGT_CUST_F              
				,T2.ACTV_NTB_CUST_F               
				,T2.NTB_LOGN_Q    
				,T2.ACTV_MOBL_APP_CUST_F                          
				,T2.CAPP_MOBL_LOGN_Q
				,T2.CUST_TNUR_YRS_Q               
FROM VT_SERVICE_USER T1

INNER JOIN B_V_USR_STD_1.BV_RBS_DIGT_PATY_ACTV T2
	ON T1.PATY_I = T2.PATY_I
	
WHERE T2.PERD_D = '2023-12-31'
)
WITH DATA ON COMMIT PRESERVE ROWS;

--===

-->>( Checks
SELECT * FROM VT_DIGITAL_ACTV;
SELECT COUNT(*) FROM VT_DIGITAL_ACTV; -- 183,597
SELECT COUNT(DISTINCT PATY_I) FROM VT_DIGITAL_ACTV; --167,171

/*	facility_id		service_status	facility_user_id	cif	CIF_CHAR	PATY_I	NTB_REGR_F	ACTV_DIGT_CUST_F	ACTV_NTB_CUST_F	NTB_logn_q	ACTV_MOBL_APP_CUST_F	CAPP_MOBL_LOGN_Q	CUST_TNUR_YRS_Q
1	100366116	Active			100838012		243489840		9		CIFPT+0243489840			1	1	1	8	1	27	21
2	102424778	Active			102939351		9231538			7		CIFPT+0009231538			1	1	1	4	1	35	6
3	102330806	Active			102657791		275092147		9		CIFPT+0275092147			1	1	1	67	1	8	29
4	102027080	Active			101991394		976235115		9		CIFPT+0976235115			1	1	1	18	1	51	20
5	102425215	Active			102930394		19283185		8		CIFPT+0019283185			1	0	0	0	0	0	41
6	102400397	Active			102893335		6382716			7		CIFPT+0006382716			1	1	1	1	1	117	8
7	102385671	Active			102840599		719105511		9		CIFPT+0719105511			1	1	1	8	1	420	22
8	102397955	Active			102882700		844197098		9		CIFPT+0844197098			1	0	0	0	0	0	24
9	102383815	Active			102832975		929546880		9		CIFPT+0929546880			1	1	1	79	1	66	37
10 102301245	Active			102609496		102905249		9		CIFPT+0102905249			1	0	0	0	0	0	24                            */

--====================

SELECT * FROM VT_O_P_DIGI
WHERE P_PATY_I IN (SELECT PATY_I FROM VT_DIGITAL_ACTV) 

/*	O_PATY_I	O_ACCT_I	O_REL_C	P_PATY_I	P_ACCT_I	P_REL_C	NTB_REGR_F	ACTV_NTB_CUST_F	ACTV_MOBL_APP_CUST_F	NTB_logn_q	CAPP_MOBL_LOGN_Q
1	CIFPT+0003097462	SAPSPAU06281510453433	BCA010	CIFPT+0508799877	SAPSPAU06281510453433	ZAUOP1	1	1	0	20	0
2	CIFPT+0015662830	SAPSPAU06269246507233	BCA010	CIFPT+0856799516	SAPSPAU06269246507233	ZAUOP1	1	1	1	7	50
3	CIFPT+0795892868	SAPSPAU06263610175080	BCA010	CIFPT+0490753816	SAPSPAU06263610175080	ZAUOP1	1	1	0	18	0
4	CIFPT+0721097936	SAPSPAU06617810369846	BCA010	CIFPT+0000322962	SAPSPAU06617810369846	ZAUOP1	1	1	1	14	84
5	CIFPT+0008877185	SAPSPAU06318511204064	BCA010	CIFPT+0139688615	SAPSPAU06318511204064	ZAUOP1	1	0	1	0	76
6	CIFPT+0016079039	SAPSPAU06269279192856	BCA010	CIFPT+0013445818	SAPSPAU06269279192856	ZAUOP1	1	1	1	6	81
7	CIFPT+0356801948	SAPSPAU06210728041281	BCA010	CIFPT+0867544885	SAPSPAU06210728041281	ZAUOP1	1	0	1	0	39
8	CIFPT+0003381511	SAPSPAU06232210440891	BCA010	CIFPT+0207781512	SAPSPAU06232210440891	ZAUOP1	1	0	1	0	18
9	CIFPT+0092385340	SAPSPAU06700310042406	BCA010	CIFPT+0013199799	SAPSPAU06700310042406	ZAUOP1	1	1	1	2	13
10	CIFPT+0015090758	SAPSPAU06259210962008	BCA010	CIFPT+0323346875	SAPSPAU06259210962008	ZAUOP1	1	0	1	0	5               */

SELECT COUNT(DISTINCT P_PATY_I) FROM VT_O_P_DIGI
WHERE P_PATY_I IN (SELECT PATY_I FROM VT_DIGITAL_ACTV) 
--6,618

SELECT COUNT(DISTINCT O_PATY_I) FROM VT_O_P_DIGI
WHERE O_PATY_I IN (SELECT PATY_I FROM VT_DIGITAL_ACTV) 
--0


******************************************************************/


--==========================================

--**-------------------END--------------------------**--
--**---------------------------------------------**--
--**------------------------------------**--
--**-----------------------------**--
--**-----------------------**--
--**-------------------**--
--**------------**--








--**-------------------ARCHIVED--------------------------**--

